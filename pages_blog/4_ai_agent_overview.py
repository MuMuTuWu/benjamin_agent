import streamlit as st

st.markdown("""
||Category|Purpose|Strengths|Limitations|Ease of Use|Integration|
|---|---|---|---|---|---|---|
|DeepResearch|Workflow-Based||1. Streamlines complex research tasks with structured workflows.  <br>2. Integrates LLMs for summarization and analysis.  <br>3. Saves time on repetitive data gathering.|1. Limited to predefined research workflows.  <br>2. May struggle with niche or F4poorly indexed web content.  <br>3. Dependent on external LLM quality.||Built within Dify, integrates with web search APIs and LLMs (e.g., DeepSeek).|
|DeepResearch (DeepSeek)|Workflow-Based|Automates research workflows by searching the web, analyzing data, and generating structured reports, mimicking a research intern.|1. Cost-Effective: DeepSeek models are typically cheaper, ideal for High-volume research tasks.  <br>2. Research-Optimized: Strong factual retrieval and summarization, tailored for analytical workflows.  <br>3. Open-source friendly: Often Integrates with platforms like Dify for customizable pipelines.  <br>4. Privacy Focus: Better suited for self-hosted setups, reducing data exposure.|1. Narrower Scope: May underperform on creative or highly subjective topics compared to ChatGPT.  <br>2. Community Support: Less widespread adoption means fewer tutorials or community plugins.  <br>3. Language Nuance: Slightly less fluent in non-technical or conversational report styles.  <br>4. Integration Limits: Relies on Dify’s ecosystem, with fewer third-party tools than OpenAI.|Moderate: Requires setup within Dify (e.g., configuring search APIs, defining report templates). DeepSeek’s straightforward API simplifies integration for technical users, but non-coders may need guidance.|1. Built into Dify’s ecosystem, connects with vector DBs, web crawlers, and DeepSeek’s API.  <br>2. Supports self-hosted LLMs, enhancing privacy.  <br>3. Limited third-party plugins compared to OpenAI.|
|DeepResearch (ChatGPT)|Workflow-Based|Same as DeepSeek: automates research workflows with a focus on web search, analysis, and report generation.|1. Broad Knowledge Base: Excels in diverse topics due to extensive training data, improving contextual analysis.  <br>2. Polished Outputs: Generates more natural, human-like reports with refined language.  <br>3. Robust Reasoning: Handles complex queries with nuanced understanding, especially for ambiguous topics.  <br>4. Ecosystem Support: Benefits from OpenAI’s API integrations and tools (e.g., plugins, embeddings).|1. Higher Cost: OpenAI’s API is pricier, impacting scalability for large-scale research tasks.  <br>2. Privacy Concerns: Cloud-based by default, raising issues for sensitive data unless using enterprise plans.  <br>3. Overgeneralization: May produce overly broad or generic summaries for niche research areas.  <br>4. Rate Limits: Stricter API quotas can slow down high-frequency workflows.|Moderate to High: Similar Dify setup, but ChatGPT’s intuitive API and documentation make it slightly easier for beginners. Prebuilt integrations (e.g., LangChain) streamline workflow design.|1. Also within Dify, leverages OpenAI’s API for seamless integration with tools like Zapier, LangChain, or enterprise platforms.  <br>2. Cloud-focused with broader third-party support but less self-hosting flexibility.|
|Dify|Workflow-Based|Open-source platform for building AI workflows, chatbots, and agents with visual orchestration.|1. Intuitive drag-and-drop UI for non-coders.  <br>2. Supports multiple LLMs (OpenAI, Anthropic, local models).  <br>3. Strong RAG pipeline for knowledge retrieval.  <br>4. Open-source flexibility for customization.|1. Steeper learning curve for complex workflows.  <br>2. Cloud version relies on third-party LLMs, impacting costs.  <br>3. Mixed customer support experiences.|High for basic tasks; moderate for advanced setups (no-code for simple bots, coding optional).|Integrates with vector DBs, APIs, and LLMs; supports self-hosting for privacy.|
|Coze|Workflow-Based|No-code/low-code platform for creating AI chatbots and virtual assistants with NLP focus.|1. User-friendly for non-technical users.  <br>2. Multi-platform deployment (websites, messaging apps).  <br>3. Strong NLP for context-aware conversations.  <br>4. Free tier available for testing.|1. Limited to chatbot-focused automation.  <br>2. No self-hosting option (cloud-only).  <br>3. Requires fine-tuning for high accuracy.  <br>4. Less flexible for non-conversational tasks.|Very high: no-code builder simplifies bot creation.|Integrates with messaging platforms, enterprise tools; limited to Coze’s ecosystem.|
|Cursor|Workflow-Based|AI-powered IDE for coding, enhancing developer productivity with natural language prompts.|1. Autonomous code generation and refactoring.  <br>2. Contextual understanding of codebases.  <br>3. Supports multiple LLMs (e.g., Claude, GPT-4).  <br>4. Suggests project structures.|1. Requires familiarity with coding environments.  <br>2. May generate suboptimal code needing manual fixes.  <br>3. High dependency on LLM reasoning quality.|Moderate: intuitive for developers, less so for non-coders.|Integrates with VSCode ecosystem, Git, and cloud APIs; model-agnostic.|
|Copilot|Workflow-Based|AI coding assistant integrated into IDEs, focused on autocomplete and task automation.|1. Seamless integration with Microsoft ecosystem (VSCode, GitHub).  <br>2. Strong for repetitive coding tasks.  <br>3. Contextual suggestions improve with project size.  <br>4. Enterprise security features.|1. Limited to Microsoft’s predefined knowledge bases in some setups.  <br>2. Less autonomous than agentic tools.  <br>3. Subscription cost for full features.|High: plug-and-play for developers within supported IDEs.|Deep integration with Microsoft 365, Power Platform; limited external API support.|
|ComfyUI|Workflow-Based|Open-source platform for AI-generated images and videos via visual node-based workflows.|1. Highly customizable for Stable Diffusion models.  <br>2. Open-source, free to use.  <br>3. Supports complex generative pipelines.  <br>4. Active community for extensions.|1. Steep learning curve for non-technical users.  <br>2. Requires powerful hardware (GPU) for efficiency.  <br>3. Setup can be time-consuming.|Low to moderate: node-based UI is visual but complex without prior knowledge.|Integrates with Stable Diffusion, Python scripts; extensible via plugins.|
|Manus|Open-Ended Based|Autonomous AI agent for flexible, goal-driven task automation.|1. High autonomy and flexibility.  <br>2. Good in open-ended scenarios.  <br>3. Strong web interaction.|1. Less structured output.  <br>2. May require oversight for accuracy.  <br>3. Limited documentation.|Moderate: requires clear goal definition.|Limited; primarily standalone with some API compatibility.|
|AutoGLM|Open-Ended Based|automate the operation of mobile phones and web pages through dialog - style interaction, allowing machines to think and act actively to achieve the goal of "thinking while doing"|1. Natural language interaction: Users can send instructions to AutoGLM like chatting with friends, and it can complete various mobile phone tasks, which is convenient and fast.  <br>2. Task planning ability: It can understand complex instructions and plan the best execution steps. For example, when analyzing future Internet giants' AI trends, it can plan the problem - handling process by itself.  <br>3. Self - error - correction and adaptation: When encountering problems during task execution, AutoGLM will try to solve them and continue the task, which improves the reliability of task execution.  <br>4. Versatile and suitable for a variety of scenarios: It can handle various tasks such as navigation and route planning, itinerary arrangement, shopping, ordering takeout, and processing emails, covering many aspects of daily life.  <br>5. Perceptual world and tool use: It can automatically log in to major platforms to obtain information, integrate a variety of self - developed tool capabilities of Zhipu, and support intelligent operations across platforms such as web browsing, email sending, and document generation.  <br>6. Accessibility support: It supports the barrier - free use of visually impaired people, reflects humanistic care, and has a wider range of applicability.  <br>7. Multitasking and background processing: It supports multitasking, such as playing games while ordering takeout, and can also perform tasks in the background, which is convenient for users to use other functions at the same time.|1. Technical limitations: The large model may have hallucinations, resulting in a high error probability, which requires user intervention. For example, it may generate inaccurate or inappropriate text.  <br>2. Inefficient execution: The task execution success rate is low, and the task response speed is slow. It takes a lot of time to complete tasks, which may affect the user experience.  <br>3. Lack of memory function: It cannot remember the user's previous preferences and habits. For example, it cannot remember the coffee shop and sweetness requirements when ordering coffee, and the user needs to enter them repeatedly.  <br>4. Permission - related security risks: It needs to obtain certain mobile phone permissions to work, which may bring security risks. If the permission management is not in place, the user's privacy and data security may be threatened.  <br>5. Complex process confirmation: Many processes require repeated confirmation by users. For example, when opening Meituan or sending messages on WeChat, users need to click to confirm manually, which is cumbersome to operate.|Easy: it allows users to complete various tasks on mobile phones and web pages through natural language interaction, with a clear and intuitive interface, and also provides rich tutorials and online support.|Flexible; seamlessly collaborating with a powerful tool chain across office, data analysis, and code - related platforms, integrating smoothly with browsers via its plug - in and demonstrating strong multi - modal data processing capabilities to handle diverse content types in different application scenarios.|
""")